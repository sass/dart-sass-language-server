name: CI

on:
  push:
    branches: [main]
    tags: ["**"]
  pull_request:

env:
  DEFAULT_NODE_VERSION: 20

jobs:
  dart_tests:
    name: "Dart tests | Dart ${{ matrix.dart_channel }} | ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dart_channel: [stable]
        pkg: [sass_language_services, sass_language_server]

    steps:
      - if: ${{ matrix.os == 'windows-latest' }}
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1
        with: { sdk: "${{ matrix.dart_channel }}" }

      - run: dart pub get

      - name: Test ${{ matrix.pkg }}
        run: dart run test
        working-directory: pkgs/${{ matrix.pkg }}

  static_analysis:
    name: Static analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        pkg: [sass_language_services, sass_language_server]

    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1

      - run: dart pub get

      - name: Analyze ${{ matrix.pkg }}
        run: dart analyze --fatal-warnings --fatal-infos
        working-directory: pkgs/${{ matrix.pkg }}

  code_tests:
    name: "VS Code tests | ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dart_channel: [stable]

    steps:
      - if: ${{ matrix.os == 'windows-latest' }}
        run: git config --global core.autocrlf false

      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1
        with: { sdk: "${{ matrix.dart_channel }}" }

      - run: dart pub get

      - uses: actions/setup-node@v4
        with: { node-version: "${{ env.DEFAULT_NODE_VERSION }}" }

      - name: Update npm for attestation feature
        run: npm install -g npm@latest

      - name: Install dependencies
        run: npm clean-install
        working-directory: extension

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
        working-directory: extension

      - name: Build extension
        run: npm run build
        working-directory: extension

      - name: Run extension tests in simulated X environment
        run: xvfb-run -a npm run test
        if: runner.os == 'Linux'
        working-directory: extension

      - name: Run extension tests
        run: npm run test
        if: runner.os != 'Linux'
        working-directory: extension
